#!/bin/bash
export PATH=/bin:/usr/bin:/sbin:/usr/sbin:/usr/local/bin

echo "install.."
DIR=$PWD


preinstall () {
    # export PATH=/bin:/usr/bin:/sbin:/usr/sbin

    if [[ -d "/Applications/ZeroTier.app" ]] ; then

        rm -f /tmp/zt1-gui-restart.tmp
        # for i in `ps axuwww | tr -s ' ' ',' | grep -F '/Applications/ZeroTier,One.app' | grep -F -v grep | cut -d , -f 1,2 | xargs`; do
        # 	u=`echo $i | cut -d , -f 1`
        # 	p=`echo $i | cut -d , -f 2`
        # 	if [ ! -z "$u" -a "0$p" -gt 0 ]; then
        # 		kill $p >>/dev/null 2>&1
        # 		sleep 0.5
        # 		kill -9 $p >>/dev/null 2>&1
        # 		echo "$u" >>/tmp/zt1-gui-restart.tmp
        # 	fi
        # done
        for i in `ps axuwww | tr -s ' ' ',' | grep -F '/Applications/ZeroTier.app' | grep -F -v grep | cut -d , -f 1,2 | xargs`; do
            u=`echo $i | cut -d , -f 1`
            p=`echo $i | cut -d , -f 2`
            if [ ! -z "$u" -a "0$p" -gt 0 ]; then
                kill $p >>/dev/null 2>&1
                sleep 0.5
                kill -9 $p >>/dev/null 2>&1
                echo "$u" >>/tmp/zt1-gui-restart.tmp
            fi
        done
        if [[ -f /tmp/zt1-gui-restart.tmp ]]
        then
            chmod 0600 /tmp/zt1-gui-restart.tmp
        fi

        # cd "/Applications"
        # rm -rf "ZeroTier One.app"
        # rm -rf "ZeroTier.app"

    fi

    if [ -d '/Library/Application Support/ZeroTier/One' ]; then
        pushd '/Library/Application Support/ZeroTier/One'
            # ensure that file locking doesn't cause issues with replacing the binary
            rm -f zerotier-one
            rm -f MacEthernetTapAgent
        popd
    fi
}

postinstall() {
    # export PATH=/bin:/usr/bin:/sbin:/usr/sbin:/usr/local/bin

    cd "/Library/Application Support/ZeroTier/One"

    if [ ! -f authtoken.secret ]; then
        head -c 1024 /dev/urandom | md5 | head -c 24 >authtoken.secret
        chown 0 authtoken.secret
        chgrp 0 authtoken.secret
        # chmod 0600 authtoken.secret
    fi
    chmod 0644 authtoken.secret

    if [ -f zerotier-one.pid ]; then
        kill `cat zerotier-one.pid`
        sleep 1
        killall MacEthernetTapAgent
        sleep 1
        killall -9 MacEthernetTapAgent
        sleep 1
        if [ -f zerotier-one.pid ]; then
            kill -9 `cat zerotier-one.pid`
            rm -f zerotier-one.pid
        fi
    fi
    launchctl load /Library/LaunchDaemons/com.zerotier.one.plist >>/dev/null 2>&1
    sleep 2

    rm -f zerotier-cli zerotier-idtool
    ln -sf zerotier-one zerotier-cli
    ln -sf zerotier-one zerotier-idtool
    if [ ! -d /usr/local/bin ]; then
        mkdir -p /usr/local/bin
    fi
    cd /usr/local/bin
    rm -f zerotier-cli zerotier-idtool
    ln -sf "/Library/Application Support/ZeroTier/One/zerotier-one" zerotier-cli
    ln -sf "/Library/Application Support/ZeroTier/One/zerotier-one" zerotier-idtool

    # if [ -f /tmp/zt1-gui-restart.tmp ]; then
    # 	for u in `cat /tmp/zt1-gui-restart.tmp`; do
    # 		if [ -f '/Applications/ZeroTier One.app/Contents/MacOS/ZeroTier One' ]; then
    # 			su $u -c '/usr/bin/open /Applications/ZeroTier\ One.app &' >>/dev/null 2>&1 &
    # 		else
    # 			su $u -c '/usr/bin/open /Applications/ZeroTier.app &' >>/dev/null 2>&1 &
    # 		fi
    # 	done
    # fi
    # rm -f /tmp/zt1-gui-restart.tmp

    return 0
}

# # install() {
    preinstall
    # if test $? != 0; then
    #     exit 1
    # fi
    cd "${DIR}"

    cp -rfX "./payload/Library/" "/Library"
    # if test $? != 0; then
    #     exit 2
    # fi

    postinstall
    if test $? != 0; then
        exit 3
    fi

    cd "${DIR}"
# # }


# # cd "/Library/Application Support/ZeroTier/One"

# if [[ ! -z "${NETWORK_ID}" ]]; then
    CLI="zerotier-cli"
    # echo "${CLI}" join "${NETWORK_ID}"
    while ! "${CLI}" status
    do
        echo "... zerotier-cli status ..."
        sleep .3
    done
# fi

exit 0